cmake_minimum_required(VERSION 3.29)

project(db_cpp)



# Add the executable
add_executable(db_cpp
        #database.cpp
        #database.h
        #dbModel.cpp
        #dbModel.h
        testing/main.cpp
        testing/config.h
        #testing/test.cpp
)

# Specify the path to SQLAPI++ headers and library
set(SQLAPI_DIR "D:/SQLAPI") # Adjust this path accordingly

# Include SQLAPI++ headers
target_include_directories(db_cpp PRIVATE "${SQLAPI_DIR}/include")


# Link SQLAPI++ library
#target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/mingw-w64-x86_64-4.8.5-posix-seh-rt_v4-rev0/lib/libsqlapidll.a") # Adjust library path and name as needed

#target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/mingw-w64-x86_64-4.8.5-posix-seh-rt_v4-rev0/lib/libsqlapi.a")

#target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/mingw-w64-x86_64-4.8.5-posix-seh-rt_v4-rev0/lib/libsqlapidll.a")

#target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/mingw-w64-x86_64-4.8.5-posix-seh-rt_v4-rev0/lib/libsqlapiu.a")

#target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/mingw-w64-x86_64-4.8.5-posix-seh-rt_v4-rev0/lib/libsqlapiudll.a")

target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/vs2022/x86_64/lib/sqlapid.lib")

target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/vs2022/x86_64/lib/sqlapisd.lib")

target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/vs2022/x86_64/lib/sqlapiud.lib")

target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/vs2022/x86_64/lib/sqlapiusd.lib")

#target_link_libraries(db_cpp PRIVATE "${SQLAPI_DIR}/vs2022/x86_64/lib/sqlapi.lib")